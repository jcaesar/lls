name: 'Release'

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: Binary
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-musl, exe: amd64-linux, os: ubuntu-latest, features: default }
          - { target: aarch64-unknown-linux-musl, exe: aarch64-linux,  os: ubuntu-latest, features: default }
          - { target: armv7-unknown-linux-musleabi, exe: armv7-linux, os: ubuntu-latest, features: default }
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.62.0
          override: true
          target: ${{ matrix.job.target }}
          components: rust-src
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          args: --release --target=${{ matrix.job.target }} --locked
          command: build
      - name: Rename result
        run: |
          rm target/${{ matrix.job.target }}/release/lls.d
          cp target/${{ matrix.job.target }}/release/lls* lls-${{ matrix.job.exe }}
      - name: upx
        uses: svenstaro/upx-action@v2
        with:
          file: lls-${{ matrix.job.exe }}
          args: --best --lzma
        if: ${{ contains(matrix.job.target, 'linux') }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: arty
          path: lls-${{ matrix.job.exe }}
 
  release:
    name: "Tagged Release"
    runs-on: "ubuntu-20.04"
    needs: build
    steps:
      - uses: actions/download-artifact@v2
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
            ./arty/lls-aarch64-linux
            ./arty/lls-armv7-linux
            ./arty/lls-amd64-linux
